#!/bin/sh

set -e
set -u

: ${TOPDIR:=/usr/src/packages}

IMAGE_DIR=$TOPDIR/KIWI
BUILD_DIR=/usr/lib/build

cd $IMAGE_DIR

STEM=$(rpm --eval '%containment_image_name')
EXT=$( rpm --eval '%containment_image_extension')
EXT=".${EXT#.}"
IMAGE=$(echo ${STEM}*1$EXT)
echo "Attempting to wrapping $IMAGE in a containment rpm ..."

NAME="${STEM}-iso"
RELEASE=$(date +%Y%m%d%H%M%S)

# Extracting the version is a bit more complicated.
# For some reason, .isos from local builds look something like this:
#
#    SUSE-CLOUD-4-x86_64{1,2,3}.iso
#
# whereas .isos from OBS builds look something like this:
#
#    SUSE-CLOUD-4-x86_64-Build0007-Media{1,2,3}.iso
#
# $IMAGE should contain the filename of the first of these 3 .isos.
VERSION="${IMAGE#$STEM}"
VERSION="${VERSION%1$EXT}"
if [ -z "$VERSION" ]; then
    echo "Local .iso build detected"
    # Just arbitrarily assign the version since we have nothing else
    # to go on.
    VERSION=1
else
    VERSION="${VERSION%-Media}"
    VERSION="${VERSION#-Build}"
fi

echo "name $NAME"
echo "version $VERSION"
echo "release $RELEASE"

sed -e "s/__NAME__/$NAME/g" \
    -e "s/__VERSION__/$VERSION/g" \
    -e "s/__RELEASE__/$RELEASE/g" \
    -e "s/__SOURCE__/$IMAGE/g" \
    < $BUILD_DIR/image.spec.in \
    > $BUILD_DIR/image.spec

ln $IMAGE $TOPDIR/SOURCES

rpmbuild -ba $BUILD_DIR/image.spec

# required for the BS to find the rpm, because it is
# a "non-standard result file for KIWI"
mkdir -p $TOPDIR/OTHER
mv $TOPDIR/RPMS/noarch/$NAME-$VERSION-$RELEASE.noarch.rpm $TOPDIR/OTHER/
